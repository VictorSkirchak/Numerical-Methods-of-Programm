import numpy as np
from scipy.misc import derivative

def f(x): 
   return 3*x**4 - 2*x**3 - x**2 + x - 4

eps = 0.0001

def find_segments(): #відокремлюємо корені 
    search_range = np.arange(-10, 10, 1)
    a = None
    previous_x = None
    current_x  = None
    segments = []

    for x in search_range: 
        x = round(x, 4)
        current_x = f(x)
        if previous_x != None and previous_x * current_x < 0: 
            segments.append((a, x))
        a = x
        previous_x = current_x

    return segments

segments = find_segments()
print(f'Відрізки:{segments}')

def rec(a, b, eps): #метод половинного ділення 
    while (abs(a-b) > eps): 
        if f(a)*f((a+b)/2) < 0:  
            b = (a+b)/2  
        else:  
            a = (a+b)/2 
        x = (a+b)/2 

    print ('x= ', round(x,5), '  -   Half division method') 

def hord (a,b,eps): #метод хорд 
    if (f(a)*derivative(f,a,n=2) > 0): 
        x0=a 
        xi=b 
    else: 
        x0=b 
        xi=a 
    xi_1=xi-(xi-x0)*f(xi)/(f(xi)-f(x0)) 
    while (abs(xi_1-xi) > eps): 
        xi = xi_1 
        xi_1 = xi - (xi - x0)*f(xi) / (f(xi) - f(x0)) 

    print('x= ', round(xi_1,5), '  -   Chord method') 

a = -2 
b = -1

print(f'Solution of a nonlinear equation on a segment [{a}, {b}]') 
rec(a, b, eps) #викликаємо метод пол. ділення для першого відрізка 
hord(a, b, eps) #викликаємо метод хорд для першого відрізка 

# Якщо є ще один відрізок для рівняння 3x⁴-2x³-x²+x-4=0, 
# то вам потрібно повторити виклики rec() та hord() для нього.
# Наприклад:

a1 = 1
b1 = 2

print(f'Solution of a nonlinear equation on a segment [{a1}, {b1}]')
rec(a1, b1, eps)
hord(a1, b1, eps)

